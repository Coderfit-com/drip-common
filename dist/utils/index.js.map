{"mappings":"4xCAAA,IAAAA,EAAAC,EAAA,kD,uBAAA,IAAAC,EAAAD,EAAA,WAAAD,EAAAG,UAAAD,EAAwBE,GACxB,IAAAC,EAAAJ,EAAA,YAAAD,EAAAG,UAAAE,EAAyBD,GACzB,IAAAE,EAAAL,EAAA,aAAAD,EAAAG,UAAAG,EAA0BF,GAC1B,IAAAG,EAAAN,EAAA,YAAAD,EAAAG,UAAAI,EAAyBH,GACzB,IAAAI,EAAAP,EAAA,UAAAD,EAAAG,UAAAK,EAAuBJ,E,kLCJvB,IAAAJ,EAAAC,EAAA,2DAASQ,EAAoBC,EAAQ,GAAIC,EAAQ,GAAIC,EAAkB,IACrE,IAAIC,EAAS,CAAC,KAAM,MAQpB,OANAF,EAAMG,SAAQ,CAACC,EAASC,KAClBD,EAAQH,KAAqBF,IAC/BG,EAAS,CAACE,EAASC,GAAM,IAItBH,C,wBAGTb,EAAAiB,OAAAb,EAAA,2BAASK,G,qFCZTL,EAAQc,eAAiB,SAAUC,GACjC,OAAOA,GAAKA,EAAEC,WAAaD,EAAI,CAACE,QAASF,E,EAG3Cf,EAAQkB,kBAAoB,SAAUH,GACpCI,OAAOC,eAAeL,EAAG,aAAc,CAACT,OAAO,G,EAGjDN,EAAQD,UAAY,SAAUsB,EAAQC,GAcpC,OAbAH,OAAOI,KAAKF,GAAQX,SAAQ,SAAUc,GACxB,YAARA,GAA6B,eAARA,GAAwBF,EAAKG,eAAeD,IAIrEL,OAAOC,eAAeE,EAAME,EAAK,CAC/BE,YAAY,EACZC,IAAK,WACH,OAAON,EAAOG,E,OAKbF,C,EAGTtB,EAAQa,OAAS,SAAUS,EAAMM,EAAUD,GACzCR,OAAOC,eAAeE,EAAMM,EAAU,CACpCF,YAAY,EACZC,IAAKA,G,8BC5BT,IAAA/B,EAAAC,EAAA,2DAASgC,EACPC,KACGP,GAEH,IAAK,MAAMC,KAAOD,SACTO,EAAON,GAEhB,OAAOM,C,wBAGTlC,EAAAiB,OAAAb,EAAA,oBAAS6B,G,uFCVT,IAAAjC,EAAAC,EAAA,kDAAAkC,eAAeC,EAAKC,GAClB,OAAO,IAAIC,SAASC,IAClBC,YAAW,IAAMD,GAAQ,IAAQF,EAAG,G,wBAIxCrC,EAAAiB,OAAAb,EAAA,YAASgC,G,qFCNT,IAAApC,EAAAC,EAAA,2DAASwC,EAAoBC,GAG3B,OAF0BC,OAAOC,KAAKF,EAAK,UAAUG,SAAS,O,wBAKhE7C,EAAAiB,OAAAb,EAAA,2BAASqC,G,uFCNT,IAAAzC,EAAAC,EAAA,2DAAS6C,EAAmBC,EAAO,GACjC,OAAO,MAAAA,C,CAGT,SAASC,EAAqBC,GAE5B,OADmBA,EAAKC,eAAe,QAAS,CAAEC,SAAU,gBAC1CC,MAAM,KAAK,GAAGC,MAAM,GAAG,E,CAG3C,SAASC,EAAqBC,GAE5B,GAAsB,iBAAXA,EAAqB,MAAM,IAAIC,MAAM,0BAChD,GAAe,QAAXD,EAAkB,OAAO,EAE7B,MAAOR,GAAQQ,EAAOH,MAAM,KACtBK,EAAaC,SAASX,EAAM,IAElC,OAAmB,IAAfU,EAAyB,EAEtBX,EAAmBW,E,wBAG5BzD,EAAAiB,OAAAb,EAAA,0BAAS0C,IAAT9C,EAAAiB,OAAAb,EAAA,4BAA6B4C,IAA7BhD,EAAAiB,OAAAb,EAAA,4BAAmDkD,G","sources":["src/utils/index.ts","src/utils/array.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/utils/object.ts","src/utils/promise.ts","src/utils/string.ts","src/utils/time.ts"],"sourcesContent":["export * from \"./array\";\nexport * from \"./object\";\nexport * from \"./promise\";\nexport * from \"./string\";\nexport * from \"./time\";\n","function searchInArrayByProp(value = '', array = [], elementProperty = '') {\n  let result = [null, null];\n\n  array.forEach((element, index) => {\n    if (element[elementProperty] === value) {\n      result = [element, index];\n    }\n  });\n\n  return result;\n}\n\nexport { searchInArrayByProp };\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","function excludeProps<T, Key extends keyof T>(\n  object: T,\n  ...keys: Key[]\n): Omit<T, Key> {\n  for (const key of keys) {\n    delete object[key];\n  }\n  return object;\n}\n\nexport { excludeProps };\n","async function wait(ms: number): Promise<false> {\n  return new Promise((resolve) => {\n    setTimeout(() => resolve(false), ms);\n  });\n}\n\nexport { wait };\n","function base64DecodeUnicode(str) {\n  const percentEncodedStr = Buffer.from(str, 'base64').toString('utf8');\n\n  return percentEncodedStr;\n}\n\nexport { base64DecodeUnicode };\n","function daysToMilliseconds(days = 1) {\n  return days * 24 * 60 * 60 * 1000;\n}\n\nfunction dateToDayMonthString(date: Date) {\n  const dateString = date.toLocaleString('en-US', { timeZone: 'Europe/Kiev' });\n  return dateString.split(',')[0].slice(0, -5);\n}\n\nfunction stringToMilliseconds(string: string) {\n  // examples: now | 7 d | 8 bd\n  if (typeof string !== 'string') throw new Error('Input should be string');\n  if (string === 'now') return 0;\n\n  const [days] = string.split(' ');\n  const daysNumber = parseInt(days, 10);\n\n  if (daysNumber === 0) return 0;\n\n  return daysToMilliseconds(daysNumber);\n}\n\nexport { daysToMilliseconds, dateToDayMonthString, stringToMilliseconds };\n"],"names":["parcelHelpers","require","_array","exportAll","exports","_object","_promise","_string","_time","searchInArrayByProp","value","array","elementProperty","result","forEach","element","index","export","interopDefault","a","__esModule","default","defineInteropFlag","Object","defineProperty","source","dest","keys","key","hasOwnProperty","enumerable","get","destName","excludeProps","object","async","wait","ms","Promise","resolve","setTimeout","base64DecodeUnicode","str","Buffer","from","toString","daysToMilliseconds","days","dateToDayMonthString","date","toLocaleString","timeZone","split","slice","stringToMilliseconds","string","Error","daysNumber","parseInt"],"version":3,"file":"index.js.map","sourceRoot":"../../"}